// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PP.Usuario.API.Data;

namespace PP.Usuario.API.Migrations
{
    [DbContext(typeof(UsuarioContext))]
    [Migration("20210427234050_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PP.Usuario.API.Models.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExcluido")
                        .HasColumnName("DataExcluido")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnName("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Excluido")
                        .HasColumnName("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.HasIndex("ProfessorId");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("PP.Usuario.API.Models.AnamnesePergunta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Pergunta")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("AnamnesePergunta");
                });

            modelBuilder.Entity("PP.Usuario.API.Models.AnamneseResposta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnamnesePerguntaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("AnamnesePerguntaId");

                    b.ToTable("AnamneseResposta");
                });

            modelBuilder.Entity("PP.Usuario.API.Models.Biometria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Altura")
                        .HasColumnType("decimal(3,2)");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AnteBracoDireito")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("AnteBracoEsquerdo")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("BracoDireito")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("BracoEsquerdo")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Cintura")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("CoxaDireita")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("CoxaEsquerda")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataDesativacao")
                        .HasColumnName("DataExcluido")
                        .HasColumnType("datetime");

                    b.Property<bool>("Desativado")
                        .HasColumnName("Excluido")
                        .HasColumnType("bit");

                    b.Property<decimal>("GemeoDireito")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("GemeoEsquerdo")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<decimal>("Quadril")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Torax")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Biometria");
                });

            modelBuilder.Entity("PP.Usuario.API.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("PP.Usuario.API.Models.Estado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.ToTable("Estado");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d443b958-60e9-481d-b780-ee0a827edbbb"),
                            Nome = "São Paulo",
                            Sigla = "SP"
                        },
                        new
                        {
                            Id = new Guid("accbe65b-6445-458d-b162-778da1a55786"),
                            Nome = "Acre",
                            Sigla = "AC"
                        },
                        new
                        {
                            Id = new Guid("d82d2ad3-ca0c-4ee6-b1ad-0092e9c6c9ff"),
                            Nome = "Alagoas",
                            Sigla = "AL"
                        },
                        new
                        {
                            Id = new Guid("bb547a09-fb59-4ba0-a55d-d8f1d751b09c"),
                            Nome = "Amapá",
                            Sigla = "AP"
                        },
                        new
                        {
                            Id = new Guid("1e4ac20d-d2a9-4493-8f04-80ba6925864f"),
                            Nome = "Bahia",
                            Sigla = "BA"
                        },
                        new
                        {
                            Id = new Guid("16ef83a4-d52e-4e22-8c2f-154c985768f1"),
                            Nome = "Ceará",
                            Sigla = "CE"
                        },
                        new
                        {
                            Id = new Guid("109411b9-f40d-4ef9-bd80-28b6889fd3a6"),
                            Nome = "Distrito Federal",
                            Sigla = "DF"
                        },
                        new
                        {
                            Id = new Guid("7e9ffa89-0fd8-42d1-a354-38edbd7eea69"),
                            Nome = "Espírito Santo",
                            Sigla = "ES"
                        },
                        new
                        {
                            Id = new Guid("ddafd76c-597c-4611-a3e3-53d934e10de3"),
                            Nome = "Goiás",
                            Sigla = "GO"
                        },
                        new
                        {
                            Id = new Guid("ea415bbe-d08f-48e3-998c-c020f7f6f31b"),
                            Nome = "Maranhão",
                            Sigla = "MA"
                        },
                        new
                        {
                            Id = new Guid("5870bbc9-af60-4f22-b208-de4a4e84420d"),
                            Nome = "Minas Gerais",
                            Sigla = "MG"
                        },
                        new
                        {
                            Id = new Guid("1dcb317f-cea9-4a8a-abcf-9e08430c4098"),
                            Nome = "Mato Grosso do Sul",
                            Sigla = "MS"
                        },
                        new
                        {
                            Id = new Guid("2be005e0-c48e-4521-a882-132dbe053a67"),
                            Nome = "Mato Grosso",
                            Sigla = "MT"
                        },
                        new
                        {
                            Id = new Guid("5a92eca9-93c9-4093-baca-8435ebe275f6"),
                            Nome = "Pará",
                            Sigla = "PA"
                        },
                        new
                        {
                            Id = new Guid("bdca7a57-9ac9-465a-aaa3-058315e47253"),
                            Nome = "Paraíba",
                            Sigla = "PB"
                        },
                        new
                        {
                            Id = new Guid("f75fdf14-5f02-4d06-9856-cc2829356941"),
                            Nome = "Pernambuco",
                            Sigla = "PE"
                        },
                        new
                        {
                            Id = new Guid("646fe8a4-1aac-4fca-8e52-0f7bdd7bedc1"),
                            Nome = "Piauí",
                            Sigla = "PI"
                        },
                        new
                        {
                            Id = new Guid("6bbcfa2f-bb45-4845-84c3-36a60cef52d0"),
                            Nome = "Paraná",
                            Sigla = "PR"
                        },
                        new
                        {
                            Id = new Guid("a745d08f-21af-4280-80cb-5a4b94cbbfdf"),
                            Nome = "Rio de Janeiro",
                            Sigla = "RJ"
                        },
                        new
                        {
                            Id = new Guid("ab339440-fcf6-4d55-8a00-b770983315e7"),
                            Nome = "Rio Grande do Norte",
                            Sigla = "RN"
                        },
                        new
                        {
                            Id = new Guid("908e9d5b-adb4-4fe1-a1f1-a43fd9edd45a"),
                            Nome = "Rondônia",
                            Sigla = "RO"
                        },
                        new
                        {
                            Id = new Guid("4e69a0ee-29dd-4907-b563-274f3a328213"),
                            Nome = "Roraima",
                            Sigla = "RR"
                        },
                        new
                        {
                            Id = new Guid("c7ed87dd-5b5a-4a32-8883-65227707102d"),
                            Nome = "Rio Grande do Sul",
                            Sigla = "RS"
                        },
                        new
                        {
                            Id = new Guid("be66ac31-bb81-41a3-9156-cfaaa4ac7d1b"),
                            Nome = "Santa Catarina",
                            Sigla = "SC"
                        },
                        new
                        {
                            Id = new Guid("4ec738db-7f80-4f8d-a405-b0db57c69741"),
                            Nome = "Sergipe",
                            Sigla = "SE"
                        },
                        new
                        {
                            Id = new Guid("7090a315-b596-409c-82c1-63a0b87affab"),
                            Nome = "Tocantins",
                            Sigla = "TO"
                        },
                        new
                        {
                            Id = new Guid("7083a8c4-8061-463b-aa30-6da2e8313432"),
                            Nome = "São Paulo",
                            Sigla = "SP"
                        },
                        new
                        {
                            Id = new Guid("9a5a2382-72fd-4ee6-a0ca-e6d36e3adf39"),
                            Nome = "Acre",
                            Sigla = "AC"
                        },
                        new
                        {
                            Id = new Guid("6c59dab6-6c65-46db-985c-e15ad133584d"),
                            Nome = "Alagoas",
                            Sigla = "AL"
                        },
                        new
                        {
                            Id = new Guid("f05df1c4-7fde-4ce4-b6d3-20bbe2d271b2"),
                            Nome = "Amapá",
                            Sigla = "AP"
                        },
                        new
                        {
                            Id = new Guid("006dfedb-59bf-480b-a729-df147a6b0140"),
                            Nome = "Bahia",
                            Sigla = "BA"
                        },
                        new
                        {
                            Id = new Guid("ac617728-b7b3-4eaa-bdce-a816bbbdfe92"),
                            Nome = "Ceará",
                            Sigla = "CE"
                        },
                        new
                        {
                            Id = new Guid("62773405-ec05-44d4-810c-52f5f58b3930"),
                            Nome = "Distrito Federal",
                            Sigla = "DF"
                        },
                        new
                        {
                            Id = new Guid("608a5fc2-eb33-4037-8a3d-33d59f3328df"),
                            Nome = "Espírito Santo",
                            Sigla = "ES"
                        },
                        new
                        {
                            Id = new Guid("d953f227-b883-404d-91e4-98f6fbc67cba"),
                            Nome = "Goiás",
                            Sigla = "GO"
                        },
                        new
                        {
                            Id = new Guid("d5678d4b-990d-4462-b986-3a29e4932148"),
                            Nome = "Maranhão",
                            Sigla = "MA"
                        },
                        new
                        {
                            Id = new Guid("d0832955-b958-47c0-b012-d0f4a5adb869"),
                            Nome = "Minas Gerais",
                            Sigla = "MG"
                        },
                        new
                        {
                            Id = new Guid("dbb47c1e-134a-40b4-9024-b0fe681a60bb"),
                            Nome = "Mato Grosso do Sul",
                            Sigla = "MS"
                        },
                        new
                        {
                            Id = new Guid("bc396fca-d789-4d45-865c-3e5954b133bf"),
                            Nome = "Mato Grosso",
                            Sigla = "MT"
                        },
                        new
                        {
                            Id = new Guid("25617d1e-40ad-4987-8845-67b412778392"),
                            Nome = "Pará",
                            Sigla = "PA"
                        },
                        new
                        {
                            Id = new Guid("53137975-837c-42be-85fe-760c7e2f7dbf"),
                            Nome = "Paraíba",
                            Sigla = "PB"
                        },
                        new
                        {
                            Id = new Guid("b1e11699-ff52-42e8-a42c-99f3cce4248e"),
                            Nome = "Pernambuco",
                            Sigla = "PE"
                        },
                        new
                        {
                            Id = new Guid("88323fe1-5911-4dcb-bf6e-d6346e06d3fe"),
                            Nome = "Piauí",
                            Sigla = "PI"
                        },
                        new
                        {
                            Id = new Guid("fae35688-406c-4f8a-8adf-cc6c3eeabaf2"),
                            Nome = "Paraná",
                            Sigla = "PR"
                        },
                        new
                        {
                            Id = new Guid("2e96c9b9-2833-4af6-b846-a5ba6756b8ef"),
                            Nome = "Rio de Janeiro",
                            Sigla = "RJ"
                        },
                        new
                        {
                            Id = new Guid("cd965545-1174-436f-82a7-2988ae0b96c9"),
                            Nome = "Rio Grande do Norte",
                            Sigla = "RN"
                        },
                        new
                        {
                            Id = new Guid("d14c3217-6db4-4539-b41a-534eb29d57e6"),
                            Nome = "Rondônia",
                            Sigla = "RO"
                        },
                        new
                        {
                            Id = new Guid("4ecbff61-4990-4ff7-b12c-c95fe3ba64f3"),
                            Nome = "Roraima",
                            Sigla = "RR"
                        },
                        new
                        {
                            Id = new Guid("4633fbbb-4386-4890-9d83-39af790bc946"),
                            Nome = "Rio Grande do Sul",
                            Sigla = "RS"
                        },
                        new
                        {
                            Id = new Guid("f174fba6-bafc-42fe-8e78-02e05cb77c6b"),
                            Nome = "Santa Catarina",
                            Sigla = "SC"
                        },
                        new
                        {
                            Id = new Guid("969f1114-e73f-45e9-969c-1292fb9fd38c"),
                            Nome = "Sergipe",
                            Sigla = "SE"
                        },
                        new
                        {
                            Id = new Guid("a8700145-098d-46d0-913a-403ca65a89cc"),
                            Nome = "Tocantins",
                            Sigla = "TO"
                        });
                });

            modelBuilder.Entity("PP.Usuario.API.Models.Ficha", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnamneseRespostaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("AnamneseRespostaId");

                    b.ToTable("Ficha");
                });

            modelBuilder.Entity("PP.Usuario.API.Models.Professor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CREF")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExcluido")
                        .HasColumnName("DataExcluido")
                        .HasColumnType("datetime");

                    b.Property<bool>("Excluido")
                        .HasColumnName("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("PP.Usuario.API.Models.Aluno", b =>
                {
                    b.HasOne("PP.Usuario.API.Models.Endereco", "Endereco")
                        .WithOne("Aluno")
                        .HasForeignKey("PP.Usuario.API.Models.Aluno", "EnderecoId")
                        .IsRequired();

                    b.HasOne("PP.Usuario.API.Models.Professor", "Professor")
                        .WithMany("Aluno")
                        .HasForeignKey("ProfessorId")
                        .IsRequired();

                    b.OwnsOne("PP.Core.DomainObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("AlunoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("varchar(254)");

                            b1.HasKey("AlunoId");

                            b1.ToTable("Aluno");

                            b1.WithOwner()
                                .HasForeignKey("AlunoId");
                        });
                });

            modelBuilder.Entity("PP.Usuario.API.Models.AnamneseResposta", b =>
                {
                    b.HasOne("PP.Usuario.API.Models.AnamnesePergunta", "AnamnesePergunta")
                        .WithMany("AnamneseResposta")
                        .HasForeignKey("AnamnesePerguntaId")
                        .IsRequired();
                });

            modelBuilder.Entity("PP.Usuario.API.Models.Biometria", b =>
                {
                    b.HasOne("PP.Usuario.API.Models.Aluno", "Aluno")
                        .WithMany("Biometria")
                        .HasForeignKey("AlunoId")
                        .IsRequired();
                });

            modelBuilder.Entity("PP.Usuario.API.Models.Endereco", b =>
                {
                    b.HasOne("PP.Usuario.API.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .IsRequired();
                });

            modelBuilder.Entity("PP.Usuario.API.Models.Ficha", b =>
                {
                    b.HasOne("PP.Usuario.API.Models.Aluno", "Aluno")
                        .WithMany("Ficha")
                        .HasForeignKey("AlunoId")
                        .IsRequired();

                    b.HasOne("PP.Usuario.API.Models.AnamneseResposta", "AnamneseResposta")
                        .WithMany("Ficha")
                        .HasForeignKey("AnamneseRespostaId")
                        .IsRequired();
                });

            modelBuilder.Entity("PP.Usuario.API.Models.Professor", b =>
                {
                    b.OwnsOne("PP.Core.DomainObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("ProfessorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("varchar(254)");

                            b1.HasKey("ProfessorId");

                            b1.ToTable("Professor");

                            b1.WithOwner()
                                .HasForeignKey("ProfessorId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
